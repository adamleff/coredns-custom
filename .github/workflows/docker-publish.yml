name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - actions-test

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: coredns-custom

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64,amd64

      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1.0.2
        id: buildx
        with:
          install: true

      - name: Log into GitHub Container Registry
      # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          
          # If testing actions, reuse the unstable tag
          [ "$VERSION" == "actions-test" ] && VERSION=unstable

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker buildx create --name builder
          docker buildx use builder
          docker buildx inspect --bootstrap

          docker buildx build -t $IMAGE_ID:$VERSION --platform linux/amd64,linux/arm64 --push .
